import numpy as np
import copy
import os
import itertools
# from  open_spiel.python.algorithms.psro_v2.eval_utils import regret, strategy_regret
from open_spiel.python.algorithms.nash_solver.replicator_dynamics_solver import replicator_dynamics

# meta_game = [np.array([[[-4.07]], [[-4.08]]]),
#              np.array([[[1.705]], [[2.785]]]),
#              np.array([[[2.365]], [[1.295]]])]

meta_game = [np.array([[[-3.78 ,  0.485, -2.715, -4.315],
        [-2.215, -2.63 , -1.99 , -1.03 ],
        [-0.89 ,  0.845,  0.51 ,  0.795]],

       [[ 1.53 ,  2.46 , -0.655,  0.155],
        [ 2.18 , -0.005, -0.38 , -0.405],
        [ 2.325,  2.585,  1.305, -0.68 ]],

       [[ 2.855,  1.565,  1.245,  2.83 ],
        [ 0.   ,  1.295, -0.335,  1.35 ],
        [ 1.13 ,  0.605, -0.34 ,  0.105]],

       [[ 0.285, -0.85 ,  0.9  , -0.43 ],
        [-0.55 ,  1.235,  3.21 ,  1.47 ],
        [ 1.55 ,  2.85 ,  3.29 ,  0.17 ]]]), np.array([[[ 1.215, -1.35 , -0.075,  3.02 ],
        [-0.16 ,  2.82 ,  0.545,  0.175],
        [-0.35 , -0.785,  0.9  , -1.21 ]],

       [[-2.99 , -1.005, -3.23 , -0.33 ],
        [-0.765, -1.975, -1.795, -0.93 ],
        [-0.57 , -0.64 ,  0.075,  0.83 ]],

       [[-5.555, -2.655, -4.08 , -3.465],
        [ 1.435, -0.68 , -0.585, -0.355],
        [ 0.115,  1.535,  1.75 ,  0.51 ]],

       [[-2.97 ,  0.535, -1.375,  0.775],
        [-0.52 , -0.955, -1.275, -0.215],
        [-1.4  , -1.775,  0.445, -1.175]]]), np.array([[[ 2.565,  0.865,  2.79 ,  1.295],
        [ 2.375, -0.19 ,  1.445,  0.855],
        [ 1.24 , -0.06 , -1.41 ,  0.415]],

       [[ 1.46 , -1.455,  3.885,  0.175],
        [-1.415,  1.98 ,  2.175,  1.335],
        [-1.755, -1.945, -1.38 , -0.15 ]],

       [[ 2.7  ,  1.09 ,  2.835,  0.635],
        [-1.435, -0.615,  0.92 , -0.995],
        [-1.245, -2.14 , -1.41 , -0.615]],

       [[ 2.685,  0.315,  0.475, -0.345],
        [ 1.07 , -0.28 , -1.935, -1.255],
        [-0.15 , -1.075, -3.735,  1.005]]])]

print(np.shape(meta_game[2]))
ne = replicator_dynamics(meta_game)
print("NE:", ne)